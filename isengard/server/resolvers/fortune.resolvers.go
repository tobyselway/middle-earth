package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.42

import (
	"context"
	"math/rand"
)

// Fortune is the resolver for the fortune field.
func (r *queryResolver) Fortune(ctx context.Context) (string, error) {
	randomString := []string{
		`Give him an evasive answer.`,
		`Expect the worst, it's the least you can do.`,
		`Perfect day for scrubbing the floor and other exciting things.`,
		`You're not my type.  For that matter, you're not even my species!!!`,
		`Do nothing unless you must, and when you must act -- hesitate.`,
		`You are taking yourself far too seriously.`,
		`Q:	How did you get into artificial intelligence?
		A:	Seemed logical -- I didn't have any real intelligence.`,
	}
	return randomString[rand.Intn(len(randomString))], nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
